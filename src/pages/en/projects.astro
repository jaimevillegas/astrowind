---
import Layout from '~/layouts/PageLayout.astro';

import Header from '~/components/widgets/Header.astro';
import CallToAction from '~/components/widgets/CallToAction.astro';
import { Icon } from 'astro-icon/components';
import ProjectModal from '~/components/ProjectModal.astro';

const metadata = {
  title: 'Jaime Villegas - Personal Web',
};

import cadImage1 from '../../assets/images/cad/cad1.png';
import cadImage2 from '../../assets/images/cad/cad2.png';
import cadImage3 from '../../assets/images/cad/cad3.png';
import cadImage4 from '../../assets/images/cad/cad4.png';
import cadImage5 from '../../assets/images/cad/cad5.png';
import cadImage6 from '../../assets/images/cad/cad6.png';
import mech1 from '../../assets/images/cad/mech1.png';
import pll_squareline from '../../assets/images/cad/pll_squareline.png';
import pcb1 from '../../assets/images/cad/pcb1.png';

import rocketTales from '../../assets/images/web/rocket-tales.png';
import naturePhoto from '../../assets/images/web/nature-photo.png';
import cosmosPhoto from '../../assets/images/web/cosmos-photo.png';
import mimiPhoto from '../../assets/images/web/mimi.jpg';
import ruizPhoto from '../../assets/images/web/ruiz.jpg';
import harmonicStatsPhoto from '../../assets/images/web/harmonic-stats.png';
import stargrowPhoto from '../../assets/images/web/stargrow.png';
import geoingenieriaPhoto from '../../assets/images/web/geoingenieria.png';
import galleryArtPhoto from '../../assets/images/web/art-gallery.png';
import jjProyectosPhoto from '../../assets/images/web/jj-proyectos.png';
import threeDViewerPhoto from '../../assets/images/web/3d-viewer.png';
import dashboardPhoto from '../../assets/images/web/dashboard.png';
import { Image } from 'astro:assets';
import Personal from './homes/personal.astro';
import ProjectCarousel from '~/components/widgets/ProjectCarousel.astro';

const highlightProjects = [
  {
    title: '3D Model Viewer',
    description: 'Interactive web application for 3D model visualization built with React, TypeScript, and Three.js. Allows loading .obj files with multiple rendering options, intuitive camera controls, and state management with Zustand. Features modern UI with shadcn/ui components and production optimization with Vite.',
    image: threeDViewerPhoto,
    view: 'https://3d-obj-viewer.netlify.app/',
    technologies: ['React', 'TypeScript', 'Three.js', 'Zustand'],
    category: 'Web Development',
  },
  {
    title: 'Corporate Analytics Dashboard',
    description: 'Modern business dashboard with real-time data visualization for corporate computer sales and rentals. Built with Next.js 14 and TypeScript, featuring Google Sheets API integration, auto-refresh every 5 seconds, interactive charts with Recharts, dark/light mode, and CSV export. Includes in-memory caching system and fully responsive design.',
    image: dashboardPhoto,
    view: 'https://gs-dashboard-app.netlify.app/',
    technologies: ['Next.js', 'TypeScript', 'Google Sheets API', 'Recharts'],
    category: 'Web Development',
  },
  {
    title: 'Custom PCB Design for ATmega32u4-Based System',
    description:
      'Custom PCB based on ATmega32u4 with scalable I/O expansion. Incorporates microSD, dual multiplexers (16 additional channels), USB hub, and optimized routing for signal integrity. Modular KiCAD design with Arduino compatibility and EMC certification for industrial applications.',
    image: pcb1,
    view: 'https://3d-obj-viewer.netlify.app/?model=19.glb',
    technologies: ['KiCad', 'PCB Design', 'ATmega32u4'],
    category: 'Engineering',
  },
  {
    title: 'Product Design for Photo Booth',
    description:
      'Modular photo booth structure in sheet metal with DFM (Design for Manufacturing) optimization. Complete development from 3D modeling to fabrication blueprints, including nesting for material waste minimization (15% savings) and simplified assembly with weld-free joining system.',
    image: cadImage2,
    view: 'https://3d-obj-viewer.netlify.app/?model=7.glb',
    technologies: ['SolidWorks', 'CAD Design', 'DFM'],
    category: 'Engineering',
  },
];

const webProjects = [
  {
    title: '3D Model Viewer',
    description: 'Interactive web application for 3D model visualization built with React, TypeScript, and Three.js. Allows loading .obj files with multiple rendering options, intuitive camera controls, and state management with Zustand. Features modern UI with shadcn/ui components and production optimization with Vite.',
    image: threeDViewerPhoto,
    view: 'https://3d-obj-viewer.netlify.app/',
    github: '#',
    technologies: ['React', 'TypeScript', 'Three.js', 'Zustand'],
    features: [
      'Intuitive camera controls',
      'Multiple rendering options',
      'State management with Zustand',
      'Modern UI with shadcn/ui'
    ],
  },
  {
    title: 'Corporate Analytics Dashboard',
    description: 'Modern business dashboard with real-time data visualization for corporate computer sales and rentals. Built with Next.js 14 and TypeScript, featuring Google Sheets API integration, auto-refresh every 5 seconds, interactive charts with Recharts, dark/light mode, and CSV export. Includes in-memory caching system and fully responsive design.',
    image: dashboardPhoto,
    view: 'https://gs-dashboard-app.netlify.app/',
    github: '#',
    technologies: ['Next.js', 'TypeScript', 'Google Sheets API', 'Recharts'],
    features: [
      'Real-time metrics visualization',
      'Auto-refresh every 5 seconds',
      'Interactive charts and analytics',
      'Dark/light mode with responsive design'
    ],
  },
  {
    title: 'JJ Real Estate Projects',
    description: 'Real estate platform developed in WordPress for a local company, designed to facilitate property listing for sale. Features dynamic step-by-step forms that intuitively guide users through the process of uploading information, photos, and technical details of properties, optimizing the publishing experience.',
    image: jjProyectosPhoto,
    view: 'https://jjproyectos.com',
    github: '#',
    technologies: ['WordPress', 'PHP', 'MySQL'],
    features: [
      'Dynamic step-by-step forms',
      'Intuitive publishing system',
      'Advanced photo management',
      'Real estate companies oriented'
    ],
  },
  {
    title: 'Nature Photo',
    description: 'Responsive photography gallery built with Astro and optimized for performance. Features progressive lazy loading, automatic image compression, and SEO optimization to maximize visual content visibility.',
    image: naturePhoto,
    view: 'https://naturephoto.netlify.app/',
    github: '#',
    technologies: ['Astro', 'TailwindCSS'],
    features: [
      'Progressive lazy loading for load optimization',
      'SEO optimized for maximum visibility',
      '100% responsive design',
      'Built with Astro for maximum performance'
    ],
  },
  {
    title: 'StarGrow Academy',
    description: 'Custom LMS built on Moodle for English learning with gamified progress system, automated assessments, statistics dashboard, and interactive modules. Includes student tracking and academic management tools.',
    image: stargrowPhoto,
    view: 'http://course.stargrowacademy.com/',
    github: '#',
    technologies: ['Moodle'],
    features: [
      'Gamified progress system',
      'Real-time statistics dashboard',
      'Intelligent automated assessments',
      'Complete student management'
    ],
  },
  {
    title: 'Rocket Tales',
    description:
      'Interactive space exploration web app built with React and Axios. Integrates NASA APIs for real-time data, timeline navigation system, reusable components, and optimized global state for an immersive educational experience.',
    image: rocketTales,
    view: 'https://rockettales.netlify.app/',
    github: '#',
    technologies: ['React', 'TailwindCSS', 'Axios'],
    features: [
      'NASA APIs integration',
      'Interactive timeline navigation',
      'Optimized global state with React',
      'Immersive educational experience'
    ],
  },
  {
    title: 'Harmonic Stats',
    description:
      'Music analytics dashboard with Chart.js and Spotify API integration. Features dynamic visualizations, advanced filtering, data caching, and recommendation algorithms based on listening patterns for personalized music discovery.',
    image: harmonicStatsPhoto,
    view: 'https://harmonicstats.netlify.app/',
    github: '#',
    technologies: ['Astro', 'TailwindCSS', 'Axios', 'Chart.js'],
    features: [
      'Complete Spotify API integration',
      'Dynamic visualizations with Chart.js',
      'Personalized recommendation algorithms',
      'Intelligent caching system'
    ],
  },
  {
    title: 'Geoingenier√≠a M&M',
    description:
      'Corporate website developed in React with SPA architecture optimized for conversion. Features headless CMS, integrated contact forms, dynamic project gallery, and technical SEO optimization for the industrial sector.',
    image: geoingenieriaPhoto,
    view: 'https://geoingenieriamm.com/',
    github: '#',
    technologies: ['React', 'TailwindCSS'],
    features: [
      'SPA architecture optimized for conversion',
      'Headless CMS for content management',
      'Technical SEO specialized for industry',
      'Integrated contact forms'
    ],
  },
  {
    title: 'Gallery Art',
    description: 'Web application demonstrating advanced RESTful API integration using Axios. Implements state management, loading states, error handling, and infinite pagination for optimized data fetching user experience.',
    image: galleryArtPhoto,
    view: 'https://axios-react-guide.netlify.app/',
    github: '#',
    technologies: ['React', 'TailwindCSS', 'Axios'],
    features: [
      'Advanced state management',
      'Optimized infinite pagination',
      'Robust error handling',
      'RESTful integration with Axios'
    ],
  },
];

const engProjects = [
  {
    title: 'Piping Design for Food Industry Tanks',
    description:
      'Comprehensive piping system for food industry tanks developed in SolidWorks. Features precision hydraulic calculations, specialized fittings, and compliance with sanitary regulations, optimizing product flow and reducing cleaning times by 30%.',
    image: cadImage1,
    technologies: ['SolidWorks', 'CAD Design'],
    features: [
      'Precision hydraulic calculations',
      'Sanitary regulations compliance',
      'Product flow optimization',
      'Cleaning time reduction by 30%'
    ],
  },
  {
    title: 'Product Design for Photo Booth',
    description:
      'Modular photo booth structure in sheet metal with DFM (Design for Manufacturing) optimization. Complete development from 3D modeling to fabrication blueprints, including nesting for material waste minimization (15% savings) and simplified assembly with weld-free joining system.',
    image: cadImage2,
    view: '#',
    github: '#',
    technologies: ['SolidWorks', 'CAD Design'],
    features: [
      'Modular structure with DFM optimization',
      'Complete development from 3D to blueprints',
      'Optimized nesting (15% material savings)',
      'Weld-free assembly system'
    ],
  },
  {
    title: 'Automated Transmission System for Textile Factory',
    description:
      'Automated mechanical transmission system for textile factory optimization. Features precision gear trains, pneumatic actuators, and PLC integration for real-time control of speed, material flow, and torque parameters. Complete project lifecycle from concept to commissioning with 25% efficiency improvement.',
    image: cadImage3,
    view: '#',
    github: '#',
    technologies: ['SolidWorks', 'CAD Design'],
    features: [
      'Integrated gears, chains and sprockets',
      'Advanced automatic controls',
      'Dynamic speed and torque adjustment',
      'Complete customer requirements compliance'
    ],
  },
  {
    title: 'Granular Material Silos with Automated Dosing System',
    description:
      'Automated silo system with 50+ ton capacity and precision dosing (¬±0.5% accuracy). Integrates FEA structural calculations, dimensioned screw conveyors, and PLC control with load cells for automatic dosing. Features HMI for real-time monitoring and complete process traceability.',
    image: cadImage4,
    view: '#',
    github: '#',
    technologies: ['SolidWorks', 'CAD Design', 'FEA Analysis'],
    features: [
      'Capacity for 50+ tons',
      'Precision dosing (¬±0.5% accuracy)',
      'Integrated FEA structural analysis',
      'HMI with real-time monitoring'
    ],
  },
  {
    title: 'P&ID Diagram for Industrial Piping Systems',
    description:
      'Comprehensive P&ID diagram for multi-service industrial systems using AutoCAD. Maps compressed air, hot water, product lines, and steam networks with complete equipment specifications, flow calculations, and pipe sizing. Ensures optimal system efficiency and regulatory compliance for industrial operations.',
    image: cadImage5,
    view: '#',
    github: '#',
    technologies: ['AutoCAD', 'CAD Design'],
    features: [
      'Complete industrial services mapping',
      'Detailed diameter specifications',
      'Precise calculations for each component',
      'Optimized operational flow'
    ],
  },
  {
    title: 'FM Transmitter PCB with Digital Monitoring System',
    description:
      'FM transmitter PCB with multi-stage audio processing and ESP32-based digital monitoring. Features real-time TFT display for power levels, frequency control, stereo VU meters, thermal monitoring, and antenna VSWR. KiCAD design optimized for RF signal integrity and EMI compliance.',
    image: mech1,
    view: '#',
    github: '#',
    technologies: ['KiCAD', 'PCB Design'],
    features: [
      'Multi-stage processing',
      'Digital monitoring with ESP32 and TFT',
      'Real-time variables (power, frequency, temperature)',
      'Integrated L/R audio VU meters'
    ],
  },
  {
    title: 'HMI Interface Design for FM Transmitter',
    description:
      'Advanced HMI interface for FM transmitter with real-time graphical monitoring. Features touch-responsive VU meters (R/L/MPX), power monitoring, thermal protection, frequency control, and intelligent alarm system. Built with LittleVGL and Squareline Studio for professional broadcast-quality user experience.',
    image: pll_squareline,
    view: '#',
    github: '#',
    technologies: ['ESP32', 'LittleVGL', 'Squareline Studio'],
    features: [
      'Touch-responsive configuration panel',
      'Intelligent alarm system',
      'VU meters for R, L and MPX modulation',
      'Optimized design with LittleVGL and Squareline'
    ],
  },
  {
    title: 'Custom PCB Design for ATmega32u4-Based System',
    description:
      'Custom PCB based on ATmega32u4 with scalable I/O expansion. Incorporates microSD, dual multiplexers (16 additional channels), USB hub, and optimized routing for signal integrity. Modular KiCAD design with Arduino compatibility and EMC certification for industrial applications.',
    image: pcb1,
    view: '#',
    github: '#',
    technologies: ['KiCad', 'PCB Design'],
    features: [
      'Scalable I/O expansion (16 channels)',
      'Integrated microSD and dual multiplexers',
      'USB hub with optimized routing',
      'EMC certification for industrial applications'
    ],
  },
  {
    title: 'Roller Conveyor Design for Compressed Scrap Containers',
    description:
      'Heavy-duty roller conveyor system for metallurgical scrap processing with dual geared motors and precision load cell integration. Features automated weight verification, harsh environment material selection, and FEA-validated structure for demanding industrial conditions. SolidWorks design ensures 24/7 operational reliability.',
    image: cadImage6,
    view: '#',
    github: '#',
    technologies: ['SolidWorks', 'CAD Design', 'FEA Analysis'],
    features: [
      'Load cell integration',
      'Automated stop mechanism',
      'Materials selected for durability',
      'Resistance in metallurgical environments'
    ],
  },
];
---

<Layout metadata={metadata}>
  <Fragment slot="announcement"></Fragment>
  <Fragment slot="header">
    <Header
      links={[
        { text: 'Home', href: '/en' },
        { text: 'Projects', href: '/en/projects' },
        { text: 'Courses', href: '/en/courses' },
        { text: 'Blog', href: '/en/blog' },
        { text: 'Github', href: 'https://github.com/jaimevillegas' },
      ]}
      actions={[
        {
          text: 'Get in Touch',
          href: '/en/contact#form',
        },
      ]}
      isSticky
      showToggleTheme
    />
  </Fragment>
  <ProjectCarousel projects={highlightProjects} />

  <div class="w-full mt-16 overflow-hidden" id="web">
    <div class="inset-0 flex flex-col items-center justify-center text-white">
      <h2 class="text-4xl font-bold">Web Development</h2>
      <p class="text-lg text-center">
        Explore my web development projects showcasing modern frontend and backend technologies
      </p>
    </div>
  </div>

  <!-- cards showing each project with image, description and buttons -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8 mx-4 md:mx-8 lg:mx-12">
    {
      webProjects.map((project) => (
        <div
          class="project-card bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700
                 rounded-2xl shadow-lg hover:shadow-2xl p-6 flex flex-col h-[680px] cursor-pointer
                 transition-all duration-500 ease-out transform
                 hover:-translate-y-2 hover:border-orange-500 hover:ring-4 hover:ring-orange-500/20
                 dark:hover:border-orange-400 dark:hover:ring-orange-400/20 relative group
                 backdrop-blur-sm bg-white/80 dark:bg-gray-900/80"
          data-title={project.title}
          data-description={project.description}
          data-image={project.image.src}
          data-view={project.view}
          data-github={project.github}
          data-technologies={JSON.stringify(project.technologies)}
          data-features={JSON.stringify(project.features || [])}
        >
          <!-- Image Container with Gradient Overlay -->
          <div class="relative h-[280px] w-full overflow-hidden rounded-xl bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-800">
            <Image
              src={project.image}
              alt={project.title}
              class="w-full h-full object-cover transition-all duration-700 group-hover:scale-110 group-hover:brightness-110"
              height={400}
              width={300}
              widths={[400, 768]}
              sizes="(max-width: 768px) 100vw, 432px"
            />
            <!-- Gradient overlay for better text readability -->
            <div class="absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            <!-- Floating Action Hint -->
            <div class="absolute top-3 right-3 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
              <div class="bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-full p-2 shadow-lg">
                <Icon name="tabler:eye" class="w-4 h-4 text-orange-500" />
              </div>
            </div>
          </div>

          <!-- Content Container -->
          <div class="flex flex-col flex-grow pt-5">
            <!-- Title with better typography -->
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 leading-tight group-hover:text-orange-600 dark:group-hover:text-orange-400 transition-colors duration-300">
              {project.title}
            </h3>

            <!-- Description with fixed height -->
            <div class="flex-grow mb-4">
              <p class="text-gray-600 dark:text-gray-400 text-sm leading-relaxed line-clamp-4 group-hover:text-gray-700 dark:group-hover:text-gray-300 transition-colors duration-300">
                {project.description}
              </p>
            </div>

            <!-- Technologies with better spacing -->
            <div class="flex flex-wrap gap-2 mb-5 min-h-[32px]">
              {project.technologies.slice(0, 3).map((tech) => (
                <span class="px-3 py-1.5 text-xs font-semibold text-orange-700 bg-orange-100 rounded-full
                           dark:bg-orange-900/50 dark:text-orange-300 border border-orange-200 dark:border-orange-800
                           hover:bg-orange-200 dark:hover:bg-orange-900 transition-colors duration-200">
                  {tech}
                </span>
              ))}
              {project.technologies.length > 3 && (
                <span class="px-3 py-1.5 text-xs font-semibold text-orange-700 bg-orange-100 rounded-full
                           dark:bg-orange-900/50 dark:text-orange-300 border border-orange-200 dark:border-orange-800
                           hover:bg-orange-200 dark:hover:bg-orange-900 transition-colors duration-200">
                  +{project.technologies.length - 3}
                </span>
              )}
            </div>

            <!-- Action Buttons with better design -->
            <div class="flex justify-between items-center pt-3 border-t border-gray-100 dark:border-gray-700">
              <div class="flex gap-3">
                {project.view && project.view !== '#' && (
                  <a
                    href={project.view}
                    target="_blank"
                    class="flex items-center gap-2 px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-lg
                           font-medium text-sm transition-all duration-200 transform hover:scale-105 shadow-md hover:shadow-lg"
                    onclick="event.stopPropagation()"
                  >
                    <Icon name="tabler:external-link" class="w-4 h-4" />
                    View Project
                  </a>
                )}
                {project.github && project.github !== '#' && (
                  <a
                    href={project.github}
                    target="_blank"
                    class="flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600
                           hover:border-orange-500 dark:hover:border-orange-400 text-gray-700 dark:text-gray-300
                           hover:text-orange-600 dark:hover:text-orange-400 rounded-lg font-medium text-sm
                           transition-all duration-200 transform hover:scale-105"
                    onclick="event.stopPropagation()"
                  >
                    <Icon name="tabler:brand-github" class="w-4 h-4" />
                    Code
                  </a>
                )}
              </div>

              <!-- View Details Button -->
              <button class="text-orange-500 hover:text-orange-600 dark:hover:text-orange-400 font-medium text-sm
                           flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-all duration-300
                           transform translate-x-2 group-hover:translate-x-0">
                <span>View details</span>
                <Icon name="tabler:arrow-right" class="w-4 h-4" />
              </button>
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <div class="w-full mt-16 overflow-hidden" id="engineering">
    <div class="inset-0 flex flex-col items-center justify-center text-white">
      <h2 class="text-4xl font-bold">Engineering</h2>
      <p class="text-lg text-center">Discover my engineering projects involving hardware, IoT, and embedded systems.</p>
    </div>
  </div>

  <!-- cards showing each project with image, description and buttons -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8 mx-4 md:mx-8 lg:mx-12">
    {
      engProjects.map((project) => (
        <div
          class="project-card bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700
                 rounded-2xl shadow-lg hover:shadow-2xl p-6 flex flex-col h-[680px] cursor-pointer
                 transition-all duration-500 ease-out transform
                 hover:-translate-y-2 hover:border-orange-500 hover:ring-4 hover:ring-orange-500/20
                 dark:hover:border-orange-400 dark:hover:ring-orange-400/20 relative group
                 backdrop-blur-sm bg-white/80 dark:bg-gray-900/80"
          data-title={project.title}
          data-description={project.description}
          data-image={project.image.src}
          data-view={project.view}
          data-github={project.github}
          data-technologies={JSON.stringify(project.technologies)}
          data-features={JSON.stringify(project.features || [])}
        >
          <!-- Image Container with Gradient Overlay -->
          <div class="relative h-[280px] w-full overflow-hidden rounded-xl bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-800">
            <Image
              src={project.image}
              alt={project.title}
              class="w-full h-full object-cover transition-all duration-700 group-hover:scale-110 group-hover:brightness-110"
              height={400}
              width={300}
              widths={[400, 768]}
              sizes="(max-width: 768px) 100vw, 432px"
            />
            <!-- Gradient overlay for better text readability -->
            <div class="absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            <!-- Floating Action Hint -->
            <div class="absolute top-3 right-3 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
              <div class="bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-full p-2 shadow-lg">
                <Icon name="tabler:eye" class="w-4 h-4 text-orange-500" />
              </div>
            </div>
          </div>

          <!-- Content Container -->
          <div class="flex flex-col flex-grow pt-5">
            <!-- Title with better typography -->
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 leading-tight group-hover:text-orange-600 dark:group-hover:text-orange-400 transition-colors duration-300">
              {project.title}
            </h3>

            <!-- Description with fixed height -->
            <div class="flex-grow mb-4">
              <p class="text-gray-600 dark:text-gray-400 text-sm leading-relaxed line-clamp-4 group-hover:text-gray-700 dark:group-hover:text-gray-300 transition-colors duration-300">
                {project.description}
              </p>
            </div>

            <!-- Technologies with better spacing -->
            <div class="flex flex-wrap gap-2 mb-5 min-h-[32px]">
              {project.technologies.slice(0, 3).map((tech) => (
                <span class="px-3 py-1.5 text-xs font-semibold text-orange-700 bg-orange-100 rounded-full
                           dark:bg-orange-900/50 dark:text-orange-300 border border-orange-200 dark:border-orange-800
                           hover:bg-orange-200 dark:hover:bg-orange-900 transition-colors duration-200">
                  {tech}
                </span>
              ))}
              {project.technologies.length > 3 && (
                <span class="px-3 py-1.5 text-xs font-semibold text-orange-700 bg-orange-100 rounded-full
                           dark:bg-orange-900/50 dark:text-orange-300 border border-orange-200 dark:border-orange-800
                           hover:bg-orange-200 dark:hover:bg-orange-900 transition-colors duration-200">
                  +{project.technologies.length - 3}
                </span>
              )}
            </div>

            <!-- Action Buttons with better design (Engineering projects may not have view/github) -->
            <div class="flex justify-between items-center pt-3 border-t border-gray-100 dark:border-gray-700">
              <div class="flex gap-3">
                {project.view && project.view !== '#' && (
                  <a
                    href={project.view}
                    target="_blank"
                    class="flex items-center gap-2 px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-lg
                           font-medium text-sm transition-all duration-200 transform hover:scale-105 shadow-md hover:shadow-lg"
                    onclick="event.stopPropagation()"
                  >
                    <Icon name="tabler:external-link" class="w-4 h-4" />
                    View Project
                  </a>
                )}
                {project.github && project.github !== '#' && (
                  <a
                    href={project.github}
                    target="_blank"
                    class="flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600
                           hover:border-orange-500 dark:hover:border-orange-400 text-gray-700 dark:text-gray-300
                           hover:text-orange-600 dark:hover:text-orange-400 rounded-lg font-medium text-sm
                           transition-all duration-200 transform hover:scale-105"
                    onclick="event.stopPropagation()"
                  >
                    <Icon name="tabler:brand-github" class="w-4 h-4" />
                    Code
                  </a>
                )}
              </div>

              <!-- View Details Button -->
              <button class="text-orange-500 hover:text-orange-600 dark:hover:text-orange-400 font-medium text-sm
                           flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-all duration-300
                           transform translate-x-2 group-hover:translate-x-0">
                <span>View details</span>
                <Icon name="tabler:arrow-right" class="w-4 h-4" />
              </button>
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <ProjectModal />
  <CallToAction
    title="Ready to start your next project?"
    subtitle="Let's talk about how we can work together to make it happen!"
    actions={[
      {
        text: 'Contact Me',
        href: '/en/contact#form',
      },
    ]}
  />

  <!-- Footer Section ****************** -->
  <footer class="bg-gray-900 dark:bg-black">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 py-12 md:py-16">
      <div class="grid gap-8 md:gap-12 sm:grid-cols-2 lg:grid-cols-4">
        <!-- Brand Column -->
        <div class="lg:col-span-1">
          <h3 class="text-2xl font-bold text-white mb-4">Jaime Villegas</h3>
          <p class="text-gray-400 leading-relaxed mb-6">
            Full Stack Developer specialized in creating innovative digital solutions with engineering precision.
          </p>
          <div class="flex space-x-4">
            <a
              href="https://linkedin.com/in/villegas0296"
              target="_blank"
              class="flex items-center justify-center w-10 h-10 bg-gray-800 hover:bg-orange-600 text-gray-400 hover:text-white rounded-lg transition-colors duration-200"
            >
              <Icon name="tabler:brand-linkedin" class="w-5 h-5" />
            </a>
            <a
              href="https://github.com/jaimevillegas"
              target="_blank"
              class="flex items-center justify-center w-10 h-10 bg-gray-800 hover:bg-orange-600 text-gray-400 hover:text-white rounded-lg transition-colors duration-200"
            >
              <Icon name="tabler:brand-github" class="w-5 h-5" />
            </a>
            <a
              href="https://fiverr.com/villegas296"
              target="_blank"
              class="flex items-center justify-center w-10 h-10 bg-gray-800 hover:bg-orange-600 text-gray-400 hover:text-white rounded-lg transition-colors duration-200"
            >
              <Icon name="tabler:brand-fiverr" class="w-5 h-5" />
            </a>
          </div>
        </div>

        <!-- Navigation Column -->
        <div>
          <h4 class="text-lg font-semibold text-white mb-4 flex items-center">
            <Icon name="tabler:navigation" class="w-5 h-5 text-orange-600 mr-2" />
            Navigation
          </h4>
          <ul class="space-y-3">
            <li>
              <a href="/en" class="text-gray-400 hover:text-orange-600 transition-colors duration-200 flex items-center">
                <Icon name="tabler:home" class="w-4 h-4 mr-2" />
                Home
              </a>
            </li>
            <li>
              <a href="/en/projects" class="text-gray-400 hover:text-orange-600 transition-colors duration-200 flex items-center">
                <Icon name="tabler:briefcase" class="w-4 h-4 mr-2" />
                Projects
              </a>
            </li>
            <li>
              <a href="/en/courses" class="text-gray-400 hover:text-orange-600 transition-colors duration-200 flex items-center">
                <Icon name="tabler:book" class="w-4 h-4 mr-2" />
                Courses
              </a>
            </li>
            <li>
              <a href="/en/blog" class="text-gray-400 hover:text-orange-600 transition-colors duration-200 flex items-center">
                <Icon name="tabler:pencil" class="w-4 h-4 mr-2" />
                Blog
              </a>
            </li>
            <li>
              <a href="/en/contact" class="text-gray-400 hover:text-orange-600 transition-colors duration-200 flex items-center">
                <Icon name="tabler:message" class="w-4 h-4 mr-2" />
                Contact
              </a>
            </li>
          </ul>
        </div>

        <!-- Services Column -->
        <div>
          <h4 class="text-lg font-semibold text-white mb-4 flex items-center">
            <Icon name="tabler:settings" class="w-5 h-5 text-orange-600 mr-2" />
            Services
          </h4>
          <ul class="space-y-3">
            <li>
              <span class="text-gray-400 flex items-center">
                <Icon name="tabler:brand-react" class="w-4 h-4 mr-2 text-orange-600" />
                Frontend Development
              </span>
            </li>
            <li>
              <span class="text-gray-400 flex items-center">
                <Icon name="tabler:brand-nodejs" class="w-4 h-4 mr-2 text-orange-600" />
                Backend Development
              </span>
            </li>
            <li>
              <span class="text-gray-400 flex items-center">
                <Icon name="tabler:database" class="w-4 h-4 mr-2 text-orange-600" />
                Database Design
              </span>
            </li>
            <li>
              <span class="text-gray-400 flex items-center">
                <Icon name="tabler:3d-cube-sphere" class="w-4 h-4 mr-2 text-orange-600" />
                CAD Modeling
              </span>
            </li>
            <li>
              <span class="text-gray-400 flex items-center">
                <Icon name="tabler:robot" class="w-4 h-4 mr-2 text-orange-600" />
                Automation
              </span>
            </li>
          </ul>
        </div>

        <!-- Contact Column -->
        <div>
          <h4 class="text-lg font-semibold text-white mb-4 flex items-center">
            <Icon name="tabler:phone" class="w-5 h-5 text-orange-600 mr-2" />
            Contact
          </h4>
          <ul class="space-y-3">
            <li class="text-gray-400 flex items-start">
              <Icon name="tabler:mail" class="w-4 h-4 mr-2 mt-1 text-orange-600 flex-shrink-0" />
              <span class="break-all">jaimevillegas296@gmail.com</span>
            </li>
            <li class="text-gray-400 flex items-start">
              <Icon name="tabler:map-pin" class="w-4 h-4 mr-2 mt-1 text-orange-600 flex-shrink-0" />
              <span>Colombia</span>
            </li>
            <li class="text-gray-400 flex items-start">
              <Icon name="tabler:clock" class="w-4 h-4 mr-2 mt-1 text-orange-600 flex-shrink-0" />
              <span>Available for remote projects</span>
            </li>
            <li class="text-gray-400 flex items-start">
              <Icon name="tabler:world" class="w-4 h-4 mr-2 mt-1 text-orange-600 flex-shrink-0" />
              <span>International clients</span>
            </li>
          </ul>
        </div>
      </div>

      <!-- Bottom Bar -->
      <div class="border-t border-gray-800 mt-12 pt-8">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <p class="text-gray-400 text-sm mb-4 md:mb-0">
            ¬© 2025 Jaime Villegas. All rights reserved.
          </p>
          <div class="flex items-center space-x-6">
            <div class="flex items-center space-x-2">
              <Icon name="tabler:heart" class="w-4 h-4 text-red-500" />
              <span class="text-gray-400 text-sm">Made with passion</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </footer>

</Layout>
