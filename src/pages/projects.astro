---
import Layout from '~/layouts/PageLayout.astro';

import Header from '~/components/widgets/Header.astro';
import CallToAction from '~/components/widgets/CallToAction.astro';
import { Icon } from 'astro-icon/components';
import ProjectModal from '~/components/ProjectModal.astro';

const metadata = {
  title: 'Jaime Villegas - Personal Web',
};

import cadImage1 from '../../assets/images/cad/cad1.png';
import cadImage2 from '../../assets/images/cad/cad2.png';
import cadImage3 from '../../assets/images/cad/cad3.png';
import cadImage4 from '../../assets/images/cad/cad4.png';
import cadImage5 from '../../assets/images/cad/cad5.png';
import cadImage6 from '../../assets/images/cad/cad6.png';
import mech1 from '../../assets/images/cad/mech1.png';
import pll_squareline from '../../assets/images/cad/pll_squareline.png';
import pcb1 from '../../assets/images/cad/pcb1.png';

import rocketTales from '../../assets/images/web/rocket-tales.png';
import naturePhoto from '../../assets/images/web/nature-photo.png';
import cosmosPhoto from '../../assets/images/web/cosmos-photo.png';
import mimiPhoto from '../../assets/images/web/mimi.jpg';
import ruizPhoto from '../../assets/images/web/ruiz.jpg';
import harmonicStatsPhoto from '../../assets/images/web/harmonic-stats.png';
import stargrowPhoto from '../../assets/images/web/stargrow.png';
import geoingenieriaPhoto from '../../assets/images/web/geoingenieria.png';
import galleryArtPhoto from '../../assets/images/web/art-gallery.png';
import { Image } from 'astro:assets';
import Personal from './homes/personal.astro';

const webProjects = [
  {
    title: 'Nature Photo',
    description: 'A través de mi lente, capturo la belleza cruda y el espíritu indomable del mundo natural.',
    image: naturePhoto,
    view: 'https://naturephoto.netlify.app/',
    github: '#',
    technologies: ['Astro', 'TailwindCSS'],
  },
  {
    title: 'StarGrow Academy',
    description: 'Plataforma de aprendizaje del idioma inglés hecha en Moodle',
    image: stargrowPhoto,
    view: 'http://course.stargrowacademy.com/',
    github: '#',
    technologies: ['Moodle'],
  },
  {
    title: 'Rocket Tales',
    description:
      'Embárcate en un viaje a través del espacio y el tiempo. Descubre las maravillas de la exploración espacial, desde los valientes astronautas que se aventuran más allá de nuestra atmósfera hasta las magníficas máquinas que lo hacen posible.',
    image: rocketTales,
    view: 'https://rockettales.netlify.app/',
    github: '#',
    technologies: ['React', 'TailwindCSS', 'Axios'],
  },
  {
    title: 'Harmonic Stats',
    description:
      'Explora el mundo de la música a través de la visualización de datos. Obtén información sobre tus artistas favoritos, sigue las tendencias globales y descubre nueva música basada en estadísticas en tiempo real.',
    image: harmonicStatsPhoto,
    view: 'https://harmonicstats.netlify.app/',
    github: '#',
    technologies: ['Astro', 'TailwindCSS', 'Axios', 'Chart.js'],
  },
  {
    title: 'Geoingeniería M&M',
    description:
      'Sitio web empresarial para Geoingeniería M&M - Soluciones en el sector de Ingeniería, Consultoría e Hidrocarburos',
    image: geoingenieriaPhoto,
    view: 'https://geoingenieriamm.com/',
    github: '#',
    technologies: ['React', 'TailwindCSS'],
  },
  {
    title: 'Gallery Art',
    description: 'Proyecto completado para los tutoriales de Blog de Axios',
    image: galleryArtPhoto,
    view: 'https://axios-react-guide.netlify.app/',
    github: '#',
    technologies: ['React', 'TailwindCSS', 'Axios'],
  },
  {
    title: 'Cosmos Photo',
    description: 'Próximamente...',
    image: cosmosPhoto,
    view: '#',
    github: '#',
    technologies: [],
  },
  {
    title: "Mimi's Personal Website",
    description: 'Próximamente...',
    image: mimiPhoto,
    view: '#',
    github: '#',
    technologies: [],
  },
  {
    title: 'Volcano Hub',
    description: 'Próximamente...',
    image: ruizPhoto,
    view: '#',
    github: '#',
    technologies: [],
  },
];

const engProjects = [
  {
    title: 'Diseño de Tuberías para Tanques de la Industria Alimentaria',
    description:
      'Desarrollé un diseño CAD integral en SolidWorks para un sistema de tuberías adaptado a tanques de la industria alimentaria. El diseño incluye accesorios y complementos calculados con precisión, asegurando condiciones de flujo óptimas para el producto. Este proyecto se centró en cumplir con los estándares de la industria y mejorar la eficiencia en los procesos de transporte de fluidos.',
    image: cadImage1,
    technologies: ['SolidWorks', 'CAD Design'],
  },
  {
    title: 'Diseño de Producto para Fotocabina',
    description:
      'Diseñé una estructura de fotocabina utilizando chapa metálica en SolidWorks, enfatizando la funcionalidad y el atractivo estético. El proyecto incluyó la generación de planes detallados de fabricación y corte, proporcionando toda la información necesaria para pasar sin problemas del diseño a la producción final. Este diseño optimizó el uso de materiales y aseguró facilidad de ensamblaje para un producto terminado de alta calidad.',
    image: cadImage2,
    view: '#',
    github: '#',
    technologies: ['SolidWorks', 'CAD Design'],
  },
  {
    title: 'Sistema de Transmisión Automatizado para Fábrica Textil',
    description:
      'Diseñé e implementé un sistema de transmisión mecánica para optimizar el flujo operativo de una fábrica textil. Usando SolidWorks, el sistema fue diseñado con engranajes, cadenas, piñones y cilindros neumáticos, e integrado con controles automáticos para ajustar variables como velocidad, flujo de material y torque. El proyecto abarcó las fases de formulación, diseño y puesta en marcha, asegurando que el sistema cumpliera con todos los requisitos del cliente en cuanto a eficiencia y confiabilidad.',
    image: cadImage3,
    view: '#',
    github: '#',
    technologies: ['SolidWorks', 'CAD Design'],
  },
  {
    title: 'Silos de Material Granular con Sistema de Dosificación Automatizado',
    description:
      'Diseñé silos de alta resistencia en SolidWorks para soportar varias toneladas de material granular, incorporando un sistema de dosificación inferior con transportadores de tornillo. El sistema mide el peso del material utilizando tolvas equipadas con celdas de carga, abriendo automáticamente las compuertas inferiores para liberar el producto en un transportador de tornillo más grande que recoge material de todos los silos. El proyecto incluyó cálculos estructurales para asegurar la capacidad de carga, diseño de transportadores de tornillo para un flujo eficiente de material a una velocidad especificada, y la integración de un sistema de control automatizado. Este sistema de control monitorea variables, asegura precisión y opera las compuertas al alcanzar el peso requerido, proporcionando un proceso de dosificación fluido y confiable.',
    image: cadImage4,
    view: '#',
    github: '#',
    technologies: ['SolidWorks', 'CAD Design', 'FEA Analysis'],
  },
  {
    title: 'Diagrama P&ID para Sistemas de Tuberías Industriales',
    description:
      'Creé un Diagrama de Tuberías e Instrumentación (P&ID) detallado usando AutoCAD, mapeando el flujo completo de varios servicios como aire comprimido, agua caliente, líneas de producto y vapor. El diagrama incluye todo el equipo, entradas, salidas y accesorios esenciales, junto con especificaciones como diámetros de tubería y direcciones de flujo. Cada línea fue planificada meticulosamente en base a cálculos para determinar sus componentes y disposición, asegurando un flujo operativo óptimo y eficiente para el sistema industrial.',
    image: cadImage5,
    view: '#',
    github: '#',
    technologies: ['AutoCAD', 'CAD Design'],
  },
  {
    title: 'PCB de Transmisor FM con Sistema de Monitoreo Digital',
    description:
      'Diseñé una PCB para un transmisor FM, incorporando múltiples etapas para el procesamiento de señales de audio. La placa cuenta con un sistema de monitoreo digital alimentado por un ESP32 y una pantalla TFT, proporcionando información en tiempo real sobre variables clave como potencia operativa, frecuencia de transmisión, medidores VU de audio izquierdo/derecho, temperatura y estado de la antena. La PCB fue diseñada en KiCAD, asegurando precisión en el diseño y funcionalidad para cumplir con los requisitos específicos de integridad de señal y monitoreo de rendimiento.',
    image: mech1,
    view: '#',
    github: '#',
    technologies: ['KiCAD', 'PCB Design'],
  },
  {
    title: 'Diseño de Interfaz HMI para Transmisor FM',
    description:
      'Desarrollé una Interfaz Hombre-Máquina (HMI) para el proyecto del transmisor FM, mostrando variables críticas del sistema en una pantalla TFT. La interfaz incluye elementos gráficos como medidores VU para modulación R, L y MPX, lecturas de potencia directa y reflejada, temperatura del sistema, frecuencia de transmisión y un sistema de alarmas para notificar a los usuarios sobre comportamientos específicos de parámetros. Además, se implementó un panel de configuración táctil para facilitar los ajustes del usuario. La interfaz fue diseñada usando LittleVGL y mejorada con Squareline Studio para una experiencia pulida y amigable para el usuario.',
    image: pll_squareline,
    view: '#',
    github: '#',
    technologies: ['ESP32', 'LittleVGL', 'Squareline Studio'],
  },
  {
    title: 'Diseño de PCB Personalizado para Sistema Basado en ATmega32u4',
    description:
      'Diseñé una PCB personalizada con el microcontrolador ATmega32u4, comúnmente encontrado en placas Arduino Mega. La PCB incluye un lector de tarjetas microSD, dos multiplexores para expandir las capacidades de E/S analógicas y digitales, y un hub USB para habilitar conexiones en cascada para dispositivos adicionales. La placa fue cuidadosamente diseñada en KiCAD, asegurando un rendimiento óptimo y adaptabilidad para una variedad de aplicaciones.',
    image: pcb1,
    view: '#',
    github: '#',
    technologies: ['KiCad', 'PCB Design'],
  },
  {
    title: 'Diseño de Transportador de Rodillos para Contenedores de Chatarra Comprimida',
    description:
      'Diseñé un sistema de transportador de rodillos para contenedores de chatarra comprimida, con dos motores con engranajes, integración de celdas de carga para medición de peso y un mecanismo de parada para verificar el peso de los contenedores antes de que se muevan a la siguiente etapa. Se prestó especial atención a la selección de materiales y cálculos para asegurar la durabilidad en las duras condiciones de un entorno metalúrgico. El diseño se completó usando SolidWorks, asegurando la funcionalidad y resistencia del sistema bajo condiciones operativas exigentes.',
    image: cadImage6,
    view: '#',
    github: '#',
    technologies: ['SolidWorks', 'CAD Design', 'FEA Analysis'],
  },
];
---

<Layout metadata={metadata}>
  <Fragment slot="announcement"></Fragment>
  <Fragment slot="header">
    <Header
      links={[
        { text: 'Inicio', href: '/es' },
        { text: 'Proyectos', href: '/es/projects' },
        { text: 'Cursos', href: '/es/courses' },
        { text: 'Blog', href: '/es/blog' },
        { text: 'Github', href: 'https://github.com/jaimevillegas' },
      ]}
      actions={[
        {
          text: 'Contáctame',
          href: '/es/contact#form',
        },
      ]}
      isSticky
      showToggleTheme
    />
  </Fragment>
  <h1 class="text-6xl font-bold text-center mt-0">Proyectos</h1>

  <div class="w-full mt-16 overflow-hidden" id="web">
    <div class="inset-0 flex flex-col items-center justify-center text-white">
      <h2 class="text-4xl font-bold">Desarrollo Web</h2>
      <p class="text-lg text-center">
        Explora mis proyectos de desarrollo web que muestran tecnologías modernas de frontend y backend
      </p>
    </div>
  </div>

  <!-- cards showing each project with image, description and buttons -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-8 m-12">
    {
      webProjects.map((project) => (
        <div
          class="project-card bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 
                 rounded-xl shadow-lg p-5 flex flex-col h-[550px] cursor-pointer 
                 transition-all duration-300 ease-in-out
                 hover:shadow-xl hover:scale-[1.02] hover:border-orange-500
                 dark:hover:border-orange-400 relative group"
          data-title={project.title}
          data-description={project.description}
          data-image={project.image.src}
          data-view={project.view}
          data-github={project.github}
          data-technologies={JSON.stringify(project.technologies)}
        >
          <div class="h-[250px] w-full overflow-hidden rounded-lg bg-gray-100 dark:bg-gray-800">
            <Image
              src={project.image}
              alt={project.title}
              class:list="w-full h-full object-cover rounded-lg transition-transform duration-300 group-hover:scale-110"
              height={400}
              width={300}
              widths={[400, 768]}
              sizes="(max-width: 768px) 100vw, 432px"
            />
          </div>
          <div class="flex flex-col flex-grow pt-4">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white">{project.title}</h3>
            <p class="text-gray-500 dark:text-gray-400 mt-2 flex-grow line-clamp-3">{project.description}</p>
            <div class="flex flex-wrap gap-2 my-3">
              {project.technologies.slice(0, 3).map((tech) => (
                <span class="px-2 py-1 text-xs font-medium text-orange-700 bg-orange-100 rounded-full dark:bg-orange-900 dark:text-orange-300">
                  {tech}
                </span>
              ))}
              {project.technologies.length > 3 && (
                <span class="px-2 py-1 text-xs font-medium text-orange-700 bg-orange-100 rounded-full dark:bg-orange-900 dark:text-orange-300">
                  +{project.technologies.length - 3}
                </span>
              )}
            </div>
            <div class="flex justify-between items-center mt-4">
              {project.view && project.view !== '#' && (
                <a
                  href={project.view}
                  target="_blank"
                  class="text-orange-500 hover:text-orange-600 dark:hover:text-orange-400 flex items-center gap-1 text-sm font-medium transition-colors"
                  onclick="event.stopPropagation()"
                >
                  <Icon name="tabler:eye" class="w-4 h-4" />
                  Ver
                </a>
              )}
              {project.github && project.github !== '#' && (
                <a
                  href={project.github}
                  class="text-orange-500 hover:text-orange-600 dark:hover:text-orange-400 flex items-center gap-1 text-sm font-medium transition-colors"
                  onclick="event.stopPropagation()"
                >
                  <Icon name="tabler:brand-github" class="w-4 h-4" />
                  Github
                </a>
              )}
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <div class="w-full mt-16 overflow-hidden" id="engineering">
    <div class="inset-0 flex flex-col items-center justify-center text-white">
      <h2 class="text-4xl font-bold">Ingeniería</h2>
      <p class="text-lg text-center">Descubre mis proyectos de ingeniería que involucran hardware, IoT y sistemas integrados.</p>
    </div>
  </div>

  <!-- cards showing each project with image, description and buttons -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-8 m-12">
    {
      engProjects.map((project) => (
        <div
          class="project-card bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 
                 rounded-xl shadow-lg p-5 flex flex-col h-[550px] cursor-pointer 
                 transition-all duration-300 ease-in-out
                 hover:shadow-xl hover:scale-[1.02] hover:border-orange-500
                 dark:hover:border-orange-400 relative group"
          data-title={project.title}
          data-description={project.description}
          data-image={project.image.src}
          data-view={project.view}
          data-github={project.github}
          data-technologies={JSON.stringify(project.technologies)}
        >
          <div class="h-[250px] w-full overflow-hidden rounded-lg bg-gray-100 dark:bg-gray-800">
            <Image
              src={project.image}
              alt={project.title}
              class:list="w-full h-full object-cover rounded-lg transition-transform duration-300 group-hover:scale-110"
              height={400}
              width={300}
              widths={[400, 768]}
              sizes="(max-width: 768px) 100vw, 432px"
            />
          </div>
          <div class="flex flex-col flex-grow pt-4">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white">{project.title}</h3>
            <p class="text-gray-500 dark:text-gray-400 mt-2 flex-grow line-clamp-3">{project.description}</p>
            <div class="flex flex-wrap gap-2 my-3">
              {project.technologies.slice(0, 3).map((tech) => (
                <span class="px-2 py-1 text-xs font-medium text-orange-700 bg-orange-100 rounded-full dark:bg-orange-900 dark:text-orange-300">
                  {tech}
                </span>
              ))}
              {project.technologies.length > 3 && (
                <span class="px-2 py-1 text-xs font-medium text-orange-700 bg-orange-100 rounded-full dark:bg-orange-900 dark:text-orange-300">
                  +{project.technologies.length - 3}
                </span>
              )}
            </div>
            <div class="flex justify-between items-center mt-4">
              {project.view && project.view !== '#' && (
                <a
                  href={project.view}
                  class="text-orange-500 hover:text-orange-600 dark:hover:text-orange-400 flex items-center gap-1 text-sm font-medium transition-colors"
                  onclick="event.stopPropagation()"
                >
                  <Icon name="tabler:eye" class="w-4 h-4" />
                  View
                </a>
              )}
              {project.github && project.github !== '#' && (
                <a
                  href={project.github}
                  class="text-orange-500 hover:text-orange-600 dark:hover:text-orange-400 flex items-center gap-1 text-sm font-medium transition-colors"
                  onclick="event.stopPropagation()"
                >
                  <Icon name="tabler:brand-github" class="w-4 h-4" />
                  Github
                </a>
              )}
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <ProjectModal />
  <CallToAction
    title="¿Listo para comenzar tu próximo proyecto?"
    subtitle="¡Hablemos sobre cómo podemos trabajar juntos para hacerlo realidad!"
    actions={[
      {
        text: 'Contáctame',
        href: '/contact#form',
      },
    ]}
  />
</Layout>
