---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Image from '~/components/common/Image.astro';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="testimonials-swiper swiper-container !overflow-hidden relative md:px-12">
    <div class="swiper-wrapper">
      {
        testimonials &&
          testimonials.map(({ testimonial, name, job, image }) => (
            <div class="swiper-slide !h-auto">
              <div class="flex flex-col p-4 md:p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600 h-full">
                {testimonial && (
                  <blockquote class="flex-auto">
                    <p class="text-muted">" {testimonial} "</p>
                  </blockquote>
                )}
                <hr class="border-slate-200 dark:border-slate-600 my-4" />
                <div class="flex items-center">
                  {image && (
                    <div class="h-10 w-10 rounded-full border border-slate-200 dark:border-slate-600 flex-shrink-0 flex items-center justify-center">
                      <Image
                        class="h-10 w-10 rounded-full object-cover"
                        width={40}
                        height={40}
                        {...image}
                      />
                    </div>
                  )}
                  <div class="grow ml-3 rtl:ml-0 rtl:mr-3">
                    {name && <p class="text-base font-semibold">{name}</p>}
                    {job && <p class="text-xs text-muted">{job}</p>}
                  </div>
                </div>
              </div>
            </div>
          ))
      }
    </div>
    <!-- Add Navigation -->
    <div class="swiper-button-prev testimonials-prev"></div>
    <div class="swiper-button-next testimonials-next"></div>
  </div>
</WidgetWrapper>

<!-- Load Swiper from CDN if not already loaded -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script is:inline src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script is:inline>
  // Retry counter to prevent infinite loops
  window.testimonialsRetryCount = 0;
  window.maxTestimonialsRetries = 10;

  // Define the function globally so it persists across navigations
  window.initTestimonialsSwiper = function(resetRetryCount = false) {
    // Testimonials are typically on home/index pages - check first
    const isHomePage = window.location.pathname === '/en' || window.location.pathname === '/en/' ||
                       window.location.pathname === '/es' || window.location.pathname === '/es/' ||
                       window.location.pathname === '/' || window.location.pathname === '';

    if (!isHomePage) {
      // Silently skip initialization if not on home page
      return;
    }

    if (resetRetryCount) {
      window.testimonialsRetryCount = 0;
    }


    const element = document.querySelector('.testimonials-swiper');

    if (element) {
    }

    if (!element) {
      // Retry logic for home page only
      if (window.testimonialsRetryCount < window.maxTestimonialsRetries) {
        window.testimonialsRetryCount++;
        setTimeout(function() { window.initTestimonialsSwiper(false); }, 100);
      } else {
        window.testimonialsRetryCount = 0; // Reset for next navigation
      }
      return;
    }

    if (typeof Swiper === 'undefined') {
      return;
    }

    // Reset retry counter on success
    window.testimonialsRetryCount = 0;

    // Destroy existing Swiper instance if it exists
    if (element.swiper) {
      element.swiper.destroy(true, true);
    }

    try {
      const testimonialsSwiper = new Swiper('.testimonials-swiper', {
        loop: true,
        slidesPerView: 1,
        spaceBetween: 30,
        navigation: {
          nextEl: '.testimonials-next',
          prevEl: '.testimonials-prev',
        },
        breakpoints: {
          640: {
            slidesPerView: 2,
            spaceBetween: 20,
          },
          1024: {
            slidesPerView: 3,
            spaceBetween: 30,
          },
        },
      });

    } catch (error) {
    }
  };

  // Register event listeners only once
  if (!window.testimonialsListenersRegistered) {

    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', window.initTestimonialsSwiper);
    } else {
      window.initTestimonialsSwiper();
    }

    // Listen for Astro View Transitions after swap (content replaced but not yet visible)
    document.addEventListener('astro:after-swap', function() {
      // Reset retry count for new navigation
      setTimeout(function() { window.initTestimonialsSwiper(true); }, 50);
    });

    // Listen for Astro View Transitions page load event (after animations complete)
    document.addEventListener('astro:page-load', function() {
      window.initTestimonialsSwiper(true);
    });

    // Fallback for window load
    window.addEventListener('load', function() {
      const element = document.querySelector('.testimonials-swiper');
      if (element && !element.swiper) {
        window.initTestimonialsSwiper();
      }
    });

    window.testimonialsListenersRegistered = true;
  } else {
    window.initTestimonialsSwiper();
  }
</script>

<style>
  .swiper-button-next,
  .swiper-button-prev {
    @apply text-primary;
    top: 50%;
    transform: translateY(-50%);
  }

  .swiper-button-prev {
    left: 0rem;
  }
  .swiper-button-next {
    right: 0rem;
  }
</style>
